extends layout

block content
    h1 Blog Posts
    button.btn.btn-primary.btn-sm.mb-3#newBlogPostBtn New Blog Post
    form#filterForm
      .form-row
        .form-group.col-md-2
          label(for='title') Title
          input.form-control.form-control-sm#titleFilter(name='title' placeholder='Title')
        .form-group.col-md-2
          label(for='author') Author
          input.form-control.form-control-sm#authorFilter(name='author' placeholder='Author')
        .form-group.col-md-2
          label(for='blogId') Blog ID
          select.form-control.form-control-sm#blogIdFilter(name='blogId')
        .form-group-col-md-3
          label(for='limit') Posts limit
          select.form-control.form-control-sm(name='limit' id='limit' required)
            option(value=1) 1
            option(value=2) 2
            option(value=3) 3
            option(value=5 selected) 5
            option(value=10) 10
            option(value=15) 15
            option(value=20) 20
            option(value=25) 25
            option(value=50) 50
            option(value=75) 75
            option(value=100) 100
        .form-group.col-md-1.align-self-end
          button.btn.btn-primary.btn-sm#filterButton Filter
    table.table#blogPostsTable(width='100%')
      thead
        tr
          th
            a(href='#' class='sort' data-field='BlogPostId') Id
          th
            a(href='#' class='sort' data-field='Title') Title
          th Slug
          th
            a(href='#' class='sort' data-field='Author') Author
          th
            a(href='#' class='sort' data-field='CreatedAt') Created At
          th Blog ID
          th Actions
      tbody#blogPostsTableBody
    nav
      ul.pagination
        li.page-item
          button.page-link(type='button' id='previousPage') Previous
        li.page-item
          span.page-link(id='currentPage') 1
        li.page-item
          button.page-link(type='button' id='nextPage') Next

    .alert.alert-danger#logError(style='display: none;') Error fetching blog posts

    // Modals
    // Create/Edit Modal
    .modal.fade#blogPostModal(tabindex='-1' role='dialog')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5.modal-title#blogPostModalTitle New Blog Post
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') &times;
          .modal-body
            form#blogPostForm
              input(type='hidden' id='blogPostId' name='id')
              .form-group
                label(for='blogPostTitle') Title
                input.form-control.form-control-sm#blogPostTitle(name='title' required)
              .form-group
                label(for='blogPostSlug') Slug
                input.form-control.form-control-sm#blogPostSlug(name='slug' required)
              .form-group
                label(for='blogPostBlogId') Blog ID
                select.form-control.form-control-sm#blogPostBlogId(name='blogId')
                  each blog in blogs
                    option(value=blog.BlogId)= blog.Title 
              .form-group
                label(for='blogPostAuthor') Author
                input.form-control.form-control-sm#blogPostAuthor(name='author' required)
              .form-group
                label(for='blogPostUserId') User ID
                select.form-control.form-control-sm#blogPostUserId(name='userId')
                  each user in users
                    option(value=user.id)= user.username                  
              .form-group
                label(for='blogPostContent') Content
                textarea.form-control.form-control-sm#blogPostContent(name='content' rows='3' required)
              .form-row
                .form-group.col-md-1
                  button.btn.btn-primary.btn-sm(type='submit') Save
                .form-group.col-md-2
                  button.btn.btn-primary.btn-sm.ml-3#importHtmlFile(type='buttom') Import
                  
          .modal-footer
            button.btn.btn-primary.btn-sm(type='button' data-dismiss='modal') Close
            input#htmlFileUploadInput(type='file' name='htmlFileUploadInput' accept='.html' style='position: absolute; width: 0px; height: 0px; left: -3000px; top: -3000px;')
    // Delete Confirmation Modal
    .modal.fade#confirmDeleteModal(tabindex='-1' role='dialog')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5.modal-title Confirm Delete
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') &times;
          .modal-body
            p Are you sure you want to delete this blog post?
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            button.btn.btn-danger#confirmDeleteBtn(type='button') Delete

    script.
      $(document).ready(function () {
        let currentPage = 1;
        let sortField = 'CreatedAt';
        let sortOrder = 'DESC';

        function fetchBlogPosts() {
            const title = $('#titleFilter').val();
            const author = $('#authorFilter').val();
            const blogId = $('#blogIdFilter').val();
            const limit = $('#limit').val();
            
            $.ajax({
                url: '/admin/blogPosts/api',
                data: { page: currentPage, limit: limit, sortField, sortOrder, title, author, blogId },
                success: function (data) {
                    const tbody = $('#blogPostsTableBody');
                    tbody.empty();

                    data.blogs.forEach(blog => {
                        let option = `<option value="${blog.BlogId}" name="${blog.Title}">${blog.Title}</option>`;
                        $('#blogIdFilter').append(option);
                    });

                    data.blogPosts.forEach(blogPost => {
                        tbody.append(`
                            <tr>
                              <td>${blogPost.BlogPostId}</td>
                              <td class="admin-blogs-ellipsis" data-toggle="popover" title="BlogPost Title details" data-content="${blogPost.Title}">${blogPost.Title}</td>
                              <td class="admin-blogs-ellipsis" data-toggle="popover" title="BlogPost Slug details" data-content="${blogPost.Slug}">${blogPost.Slug}</td>
                              <td>${blogPost.Author}</td>
                              <td>${blogPost.CreatedAt}</td>
                              <td>${blogPost.BlogId}</td>
                              <td>
                                <i class="fas fa-edit mbr-iconfont mbr-iconfont-btn edit-btn" data-id="${blogPost.BlogPostId}"></i>
                                <i class="far fa-times-circle mbr-iconfont mbr-iconfont-btn delete-btn" data-id="${blogPost.BlogPostId}"></i>
                              </td>
                            </tr>
                          `);
                    });
                    $('#currentPage').text(currentPage);
                    $('#previousPage').toggleClass('disabled', currentPage <= 1);
                    $('#nextPage').toggleClass('disabled', currentPage >= data.totalPages);

                    $('#previousPage').prop('disabled', currentPage <= 1);
                    $('#nextPage').prop('disabled', currentPage >= data.totalPages);

                    $('[data-toggle="popover"]').popover({
                      trigger: 'hover',
                      placement: 'left',
                      container: 'body'
                    });
                }
            });
        }

        $('#htmlFileUploadInput').on('change', function () {
            const file = this.files[0];

            if (file) {
                const formData = new FormData();
                const blogPostId = $('#blogPostId').val();
                formData.append('html', file);
                formData.append('blogPostId', blogPostId);
                $.ajax({
                    url: '/admin/blogPosts/uploadHtmlFile',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            alert('Html file uploaded succesfully.');
                            
                        } else {
                            alert('Html file upload failed.');
                        }
                    },
                    error: function () {
                        alert('An error occurred while uploading the Html file.');
                    }
                });
            }
        });

        $('#filterButton').on('click', function (e) {
            e.preventDefault();
            currentPage = 1;
            fetchBlogPosts();
        });

        $('#previousPage').on('click', function (e) {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                fetchBlogPosts();
            }
        });

        $('#nextPage').on('click', function (e) {
            e.preventDefault();
            currentPage++;
            fetchBlogPosts();
        });

        $('.sort').on('click', function (e) {
            e.preventDefault();
            const field = $(this).data('field');
            sortOrder = (sortField === field && sortOrder === 'ASC') ? 'DESC' : 'ASC';
            sortField = field;
            fetchBlogPosts();
        });

        $('#newBlogPostBtn').on('click', function () {
            $('#blogPostModalTitle').text('New Blog Post');
            $('#blogPostForm')[0].reset();
            $('#blogPostId').val('');
            $('#blogPostModal').modal('show');
        });

        $('#importHtmlFile').on('click', function () {
            $('#htmlFileUploadInput').click();
        });

        

        $(document).on('click', '.edit-btn', function () {
            const blogPostId = $(this).data('id');
            $.get(`/admin/blogPosts/${blogPostId}`, function (blogPost) {
                $('#blogPostModalTitle').text('Edit Blog Post');
                $('#blogPostTitle').val(blogPost.Title);
                $('#blogPostSlug').val(blogPost.Slug);
                $('#blogPostBlogId').val(blogPost.BlogId);
                $('#blogPostAuthor').val(blogPost.Author);
                $('#blogPostUserId').val(blogPost.UserId);
                $('#blogPostContent').val(blogPost.Content);
                $('#blogPostId').val(blogPost.BlogPostId);
                $('#blogPostModal').modal('show');
            });
        });

        $('#blogPostForm').on('submit', function (e) {
            e.preventDefault();
            const blogPostId = $('#blogPostId').val();
            const url = blogPostId ? `/admin/blogPosts/edit/${blogPostId}` : '/admin/blogPosts/create';
            $.post(url, $(this).serialize(), function (response) {
                if (response.success) {
                    $('#blogPostModal').modal('hide');
                    fetchBlogPosts();
                }
            });
        });

        $(document).on('click', '.delete-btn', function () {
            const blogPostId = $(this).data('id');
            $('#confirmDeleteBtn').data('id', blogPostId);
            $('#confirmDeleteModal').modal('show');
        });

        $('#confirmDeleteBtn').on('click', function () {
            const blogPostId = $(this).data('id');
            $.post(`/admin/blogPosts/delete/${blogPostId}`, function (response) {
                if (response.success) {
                    $('#confirmDeleteModal').modal('hide');
                    fetchBlogPosts();
                }
            });
        });

        fetchBlogPosts();
        $('#collapseBlogPosts').addClass('show');
        $('#activity-logs').addClass('active');
      });
