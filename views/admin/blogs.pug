extends layout

block content

    h1 Blogs
    button.btn.btn-primary.btn-sm.mb-3#newBlogBtn New Blog
    form#filterForm
      .form-row
        .form-group.col-md-2
          label(for='title') Title
          input.form-control.form-control-sm#titleFilter(name='title' placeholder='Title')
        .form-group.col-md-2
          label(for='author') Author
          input.form-control.form-control-sm#authorFilter(name='author' placeholder='Author')
        .form-group-col-md-3
          label(for='limit') Blogs limit
          select.form-control.form-control-sm(name='limit' id='limit' required)
            option(value=1) 1
            option(value=2) 2
            option(value=3) 3
            option(value=5) 5
            option(value=10) 10
            option(value=15) 15
            option(value=20) 20
            option(value=25) 25
        .form-group.col-md-1.align-self-end
          button.btn.btn-primary.btn-sm#filterButton Filter
    table.table.rounded#blogsTable(width='100%')
      thead
        tr
          th
            a(href='#' class='sort' data-field='Title') Title
          th Description
          th
            a(href='#' class='sort' data-field='Author') Author
          th
            a(href='#' class='sort' data-field='DateCreated') Date Created
          th Actions
      tbody#blogsTableBody
    nav
      ul.pagination
        li.page-item
          button.page-link(type='button' id='previousPage') Previous
        li.page-item
          span.page-link(id='currentPage') 1
        li.page-item
          button.page-link(type='button' id='nextPage') Next

    .alert.alert-danger#logError(style='display: none;') Error fetching blogs


    // Modals
    // Create/Edit Modal
    .modal.fade#blogModal(tabindex='-1' role='dialog')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5.modal-title#blogModalTitle New Blog
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') &times;
          .modal-body
            form#blogForm
              input(type='hidden' id='blogId' name='id')
              .form-group
                label(for='blogTitle') Title
                input.form-control.form-control-sm#blogTitle(name='title' required)
              .form-group
                label(for='blogDescription') Description
                textarea.form-control.form-control-sm#blogDescription(name='description')
              .form-group
                label(for='blogAuthor') Author
                input.form-control.form-control-sm#blogAuthor(name='author' required)
              button.btn.btn-primary.btn-sm(type='submit') Save
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Close

    // Delete Confirmation Modal
    .modal.fade#confirmDeleteModal(tabindex='-1' role='dialog')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5.modal-title Confirm Delete
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') &times;
          .modal-body
            p Are you sure you want to delete this blog?
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            button.btn.btn-danger#confirmDeleteBtn(type='button') Delete

    script.  
      $(document).ready(function () {
        let currentPage = 1;
        let sortField = 'DateCreated';
        let sortOrder = 'DESC';

        

        function fetchBlogs() {
            const title = $('#titleFilter').val();
            const author = $('#authorFilter').val();
            const limit = $('#limit').val();
            
            $.ajax({
                url: '/admin/blogs/api',
                data: { page: currentPage, limit: limit, sortField, sortOrder, title, author },
                success: function (data) {
                    const tbody = $('#blogsTableBody');
                    tbody.empty();
                    data.blogs.forEach(blog => {
                        tbody.append(`
                            <tr>
                              <td>${blog.Title}</td>
                  
                              <td class="admin-blogs-ellipsis" data-toggle="popover" title="Blog description details" data-content="${blog.Description}">${blog.Description}</td>
                              <td>${blog.Author}</td>
                              <td>${new Date(blog.DateCreated).toLocaleString()}</td>
                              <td>
                                <button class="btn btn-warning btn-sm edit-btn" data-id="${blog.BlogId}">Edit</button>
                                <button class="btn btn-danger btn-sm delete-btn" data-id="${blog.BlogId}">Delete</button>
                              </td>
                            </tr>
                          `);
                    });
                    $('#currentPage').text(currentPage);
                    $('#previousPage').toggleClass('disabled', currentPage <= 1);
                    $('#nextPage').toggleClass('disabled', currentPage >= data.totalPages);

                    $('#previousPage').prop('disabled', currentPage <= 1);
                    $('#nextPage').prop('disabled', currentPage >= data.totalPages);

                    $('[data-toggle="popover"]').popover({
                      trigger: 'hover',
                      placement: 'left',
                      container: 'body'
                    });
                    //- $('#previousPage').toggleClass('disabled', currentPage <= 1);
                    //- $('#nextPage').toggleClass('disabled', currentPage >= data.totalPages);
                }
            });

        }

        $('#filterButton').on('click', function (e) {
            e.preventDefault();
            currentPage = 1;
            fetchBlogs();
        });

        $('#previousPage').on('click', function (e) {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                fetchBlogs();
            }
        });

        $('#nextPage').on('click', function (e) {
            e.preventDefault();
            currentPage++;
            fetchBlogs();
        });

        $('.sort').on('click', function (e) {
            e.preventDefault();
            const field = $(this).data('field');
            sortOrder = (sortField === field && sortOrder === 'ASC') ? 'DESC' : 'ASC';
            sortField = field;
            fetchBlogs();
        });

        $('#newBlogBtn').on('click', function () {
            $('#blogModalTitle').text('New Blog');
            $('#blogForm')[0].reset();
            $('#blogId').val('');
            $('#blogModal').modal('show');
        });

        $(document).on('click', '.edit-btn', function () {
            const blogId = $(this).data('id');
            $.get(`/admin/blogs/${blogId}`, function (blog) {
                $('#blogModalTitle').text('Edit Blog');
                $('#blogTitle').val(blog.Title);
                $('#blogDescription').val(blog.Description);
                $('#blogAuthor').val(blog.Author);
                $('#blogId').val(blog.BlogId);
                $('#blogModal').modal('show');
            });
        });

        $('#blogForm').on('submit', function (e) {
            e.preventDefault();
            const blogId = $('#blogId').val();
            const url = blogId ? `/admin/blogs/edit/${blogId}` : '/admin/blogs/create';
            $.post(url, $(this).serialize(), function (response) {
                if (response.success) {
                    $('#blogModal').modal('hide');
                    fetchBlogs();
                }
            });
        });

        $(document).on('click', '.delete-btn', function () {
            const blogId = $(this).data('id');
            $('#confirmDeleteBtn').data('id', blogId);
            $('#confirmDeleteModal').modal('show');
        });

        $('#confirmDeleteBtn').on('click', function () {
            const blogId = $(this).data('id');
            $.post(`/admin/blogs/delete/${blogId}`, function (response) {
                if (response.success) {
                    $('#confirmDeleteModal').modal('hide');
                    fetchBlogs();
                }
            });
        });

        fetchBlogs();
        $('#collapseBlogs').addClass('show');
      $('#activity-logs').addClass('active');
      });